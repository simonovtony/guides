**** Язык JavaScript ****

1 *** Введение
    1 ** Введение в JavaScript
        * Что такое JavaScript
        * Что умеет JavaScript
        * Что НЕ умеет JavaScript
        * В чем уникальность JavaScript
        * Тенденции развития
        * Альтернативные браузерные технологии
        * Языки поверх JavaScript
        * Итого
    2 ** Справочники и спецификации
        * Справочники, и как в них искать
        * Спецификации
        * Итого
    3 ** Редакторы для кода
        * IDE
        * Легкие редакторы
        * Мои редакторы
        * Не будем ссорится
    4 ** Консоль разработчика
        * Google Chrome
        * Firefox
        * Internet Explorer
        * Safari
        * Итого

2 *** Основы JavaScript
    1 ** Привет мир
        * Тег SCRIPT
        * Современная разметка для SCRIPT
        * Задачи
    2 ** Внешние скрипты, порядок исполнения
        * Асинхронные скрипты: defer/async
        * Итого
        * Задачи
    3 ** Структура кода
        * Команды
        * Точка с запятой
        * Комментарии
    4 ** Современный стандарт, "use strict"
        * Директива use strict
        * Нужен ли мне "use strict"?
        * ES5-shim
        * Итого
    5 ** Переменные
        * Переменная
        * Имена переменных
        * Важность директивы var
        * Константы
        * Итого
    6 ** Правильный выбор имени переменной
        * Правила именования
        * Задачи
    7 ** Шесть типов данных, typeof
        * Число "number"
        * Строка "string"
        * Булевый (логический) тип "boolean"
        * Специальное значение "null"
        * Специальное значение "undefined"
        * Обьекты "object"
        * Оператор typeof
        * Итого
    8 ** Основные операторы
        * Термин: "унарный", "бинарный", "операнд"
        * Сложение строк, бинарный +
        * Приоритет
        * Присваивание
        * Взятие остатка %
        * Инкремент/декремент: ++, --
        * Побитовые операторы
        * Сокращенная арифметика с присваиванием
        * Оператор запятая
        * Задачи
    9 ** Операторы сравнения и логические операторы
        * Логические значения
        * Сравнение строк
        * Сравнение разных типов
        * Строгое равенство
        * Сравнение с null и undefined
        * Итого
    10 ** Побитовые операторы
        * Побитовые операторы
        * Формат 32-битного целого числа со знаком
        * Список операторов
        * & (побитовый И)
        * | (побитовый ИЛИ)
        * ^ (искоючающее ИЛИ)
        * ~ (побитовое НЕ)
        * Применение побитовых операторов
        * Итого
        * Задачи
    11 ** Взаимодействие с пользователем: alert, prompt, confirm
        * alert
        * prompt
        * confirm
        * Особенности встроенных функций
        * Резюме
        * Задачи
    12 ** Условный операторы: if, '?'
        * Оператор if
        * Преобразование к логическому типу
        * Неверное условие, else
        * Несколько условий else if
        * Оператор вопросительный знак "?"
        * Несколько операторов "?"
        * Задачи
    13 ** Логические операторы
        * || (ИЛИ)
        * Короткий цикл вычислений
        * Значение ИЛИ
        * && (И)
        * ! (НЕ)
        * Задачи
    14 ** Преобразование типов для примитивов
        * Строковое преобразование
        * Численное преобразование
        * Логическое преобразование
        * Итого
        * Задачи
    15 ** Циклы while, for
        * Цикл while
        * Цикл do..while
        * Цикл for
        * Пропуск частей for
        * Прерывание цикла: break
        * Следующая итерация: continue
        * Метки для break/continue
        * Итого
        * Задачи
    16 ** Конструкция switch
        * Синтаксис
        * Пример работы
        * Группировка case
        * Тип имеет значение
        * Задачи
    17 ** Функции
        * Обьявление
        * Локальные переменные
        * Внешние переменные
        * Параметры
        * Аргументы по умолчанию
        * Возврат значения
        * Выбор имени функции
        * Итого
        * Задачи
    18 ** Функциональные выражения
        * Обьявление Function Expression
        * Сравнение с Function Declaration
        * Условное обьявление функции
        * Анонимные функции
        * new Function
        * Итого
    19 ** Рекурсия, стек
        * Степень pow(x, n) через рекурсию
        * Контекст выполнения, стек
        * Итого
        * Задачи
    20 ** Именованые функциональные выражения
        * Named Function Expression
        * Пример использования
        * Итого
        * Задачи
    21 ** Всё вместе: особенности JavaScript
        * Структура кода
        * Переменные и типы
        * Строгий режим
        * Взаимодействие с посетителем
        * Особенности операторов
        * Логические операторы
        * Циклы
        * Конструкция switch
        * Функции
        * Function Declaration и Expression
        * Итого

3 *** Качество кода
    1 ** Отладка в браузере Chrome
        * Общий вид панели Source
        * Общие кнопки управления
        * Точка останова
        * Остановиться и осмотреться
        * Управление выполнением
        * Консоль
        * Ошибки
        * Итого
    2 ** Советы по стилю кода
        * Синтаксис
        * Именование
        * Уровни вложенности
        * Функции = Комментарии
        * Функции - под кодом
        * Плохие комментарии
        * Хорошие комментарии
        * Руководства по стилю
        * Автоматизированные средства проверки
        * Итого
        * Задачи
    3 ** Как писать неподдерживаемый код?
        * Соглашение - по настроению
        * Краткость - сестра таланта!
        * Именование
        * Мощьные функции!
        * Внимание... Сюр-при-из!
        * Заключение
    4 ** Автоматические тесты при помощи chai и mocha
        * Зачем нужны тесты?
        * BDD - поведенчиские тесты кода
        * Разработка pow: спецификация
        * Поток разработки
        * Пример в действии
        * Начальная реализация
        * Исправление спецификации
        * Уточнение реализации
        * Вложенный describe
        * Расширение спецификации
        * Другие assert
        * Итого
        * Что дальше?
        * Задачи

4 *** Структуры данных
    1 ** Введение в методы и свойства
        * Свойство str.length
        * Метод str.toUpperCase()
        * Метод num.toFixed(n)
        * Итого
    2 ** Числа
        * Способы записи
        * Деление на ноль, Infinity
        * NaN
        * isFinite(n)
        * Преобразование к числу
        * Мягкое преобразование: parseInt, parseFloat
        * Проверка на число
        * toString(система счисления)
        * Округление
        * Неточные вычисления
        * Другие математические методы
        * Итого
        * Задачи
    3 ** Строки
        * Создание строк
        * Методы и свойства
        * Кодировка Юникод
        * Посимвольное сравнение
        * Правильное сравнение
        * Итого
        * Задачи
    4 ** Обьекты как ассоциативные массивы
        * Ассоциативные массивы
        * Создание обьектов
        * Операции с обьектом
        * Компактное представление обьектов
        * Итого
        * Задачи
    5 ** Обекты: перебор свойств
        * for..in
        * Количество свойств в обьекте
        * В каком порядке перебираются свойства?
        * Итого
        * Задачи
    6 ** Обьекты: передача по ссылке
        * Копирование по значению
        * Копирование по ссылке
        * Клонирование обьектов
        * Вывод в консоли
        * Итого
    7 ** Массивы с числовыми индексами
        * Обьявление
        * Методы pop/push, shift/unshift
        * Внутреннее устройство массива
        * Перебор элементов
        * Особенности работы length
        * Создание вызовом new Array
        * Внутреннее представление массивов
        * Итого
        * Задачи
    8 ** Массивы: методы
        * Метод split
        * Метод join
        * Удаление из массива
        * Метод splice
        * Метод slice
        * Сортировка, метод sort(fn)
        * reverse
        * concat
        * indexOf/lastIndexOf
        * Object.keys(obj)
        * Итого
        * Задачи
    9 ** Массив: перебирающие методы
        * forEach
        * filter
        * map
        * every/some
        * reduce/reduceRight
        * Итого
        * Задачи
    10 ** Псевдомассив аргументов "arguments"
        * Доступ к лишним аргументам
        * Пример: копирование свойств copy(dst, src1, src2...)
        * Устаревшее свойство arguments.callee
        * Именованные аргументы
        * Итого
        * Задачи
    11 ** Дата и время
        * Создание
        * Получение компонентов даты
        * Установка компонентов даты
        * Форматирование и вывод дат
        * Разбор строки, Date.parse
        * Метод Date.now
        * Итого
        * Задачи

5 *** Замыкания, область видимости
    1 ** Глобальный обьект
        * Глобальный обьект
        * Порядок инициализации
        * Итого
        * Задачи
    2 ** Замыкания, функции изнутри
        * Лексическое окружение
        * Доступ ко внешним переменным
        * Всегда текущее значение
        * Вложенные функции
        * Возврат функции
        * Свойства функции
        * Итого: замыкания
        * Задачи
    3 ** [[Scope]] для new Function
        * Присвоение [[Scope]] для new Function
        * Примеры
        * Почему так сложно
        * Итого
    4 ** Локальные переменные
        * Счетчик-обьект
        * Обьект счётчика + функция
        * Задачи
    5 ** Модули через замыкания
        * Зачем нужен модуль
        * Приём проектирования "Модуль"
        * Экспорт значения
        * Экспорт через return
        * Итого
    6 ** Управление памятью в JavaScript
        * Управление памятью в JavaScript
        * Алгоритм сборки мусора
        * Замыкания
        * Влияния управления памятью на скорость
    7 ** Устаревшая конструкция "with"
        * Пример
        * Изменения переменной
        * Почему отказались от with?
        * Итого
        * Задачи
6 *** Методы обьектов и контекст вызова
    1 ** Методы обьектов, this
       * Методы у обьектов
       * Доступ к обьекту через this
       * Подробнее про this
       * Значение this при вызове без контекста
       * Ссылочный тип
        * Задачи
    2 ** Преобразование обьектов: toString и valueOf
       * Логические преобразование
       * Строковое преобразование
       * Численное преобразование
       * Две стадии преобразования
       * Итого
       * Задачи
    3 ** Создание обьектов через new
       * Конструктор
       * Правила обработки return
       * Создание методов в конструкторе
       * Локальные переменные
       * Итого
       * Задачи
    4 ** Дескрипторы, геттеры и сеттеры свойств
       * Дескрипторы в примерах
       * Обычное свойство
       * Свойство-константа
       * Свойство, скрытое для for...in
       * Свойство-функция
       * Указание get/set в литералах
       * Да здравствует get/set!
       * Другие методы работы со свойствами
       * Задачи
    5 ** Статические и фабричные методы
       * Статические свойства
       * Статические методы
       * Пример: сравнение обьектов
       * Фабричные методы
       * Итого
       * Задачи
    6 ** Явное указание this: "call", "apply"
       * Метод call
       * "Одалживание метода"
       * Еще пример: [].slice.call(arguments)
       * Метод apply
       * Итого про this
       * Задачи
    7 ** Привязка контекста и карринг: "bind"
       * Пример потери контекста
       * Решение 1: сделать обертку
       * Решение 2: bind для привязки контекста
       * Решение 3: встроенный метод bind
       * Карринг
       * Функция ask для задачи
       * Итого
       * Задачи
    8 ** Функции-обёртки, декораторы
       * bind - привязка контекста
       * Декоратор-таймер
       * Декоратор для проверки типа
       * Декоратор проверки доступа
       * Итого
       * Задачи

7 *** Некоторые другие возможности
    1 ** Типы данных: [[Class]], instanceof и утки
       * Оператор typeof
       * Секретное свойство [[Class]]
       * Метод Array.isArray
       * Оператор instanceof
       * Утиная типизация
       * Пример полиморфной функции
       * Итого
       * Задачи
    2 ** Формат JSON, метод toJSON
        * Формат JSON
        * Метод JSON.parse
        * Умный разбор: JSON.parse(str, reviver)
        * Сериализация, метод JSON.stringify
        * Итого
        * Задачи
    3 ** setTimeout и setInterval
        * setTimeout
        * setInterval
        * Минимальная задержка таймера
        * Реальная частота срабатывания
        * Разбивка долгих скриптов
        * Итого
        * Задачи
    4 ** Запуск кода из строки: eval
        * Использование eval
        * Неграмотное использование eval
        * Запуск скрипта в глобальной области
        * Внешние данные через new Function
        * JSON и eval
        * Итого
        * Задачи
    5 ** Перехават ошибок, "try..catch"
        * Конструкция try...catch
        * Обьект ошибки
        * Пример использования
        * Генерация своих ошибок
        * Проброс исключений
        * Оборачивание исключений
        * Секция finally
        * Последняя надежда: window.onerror
        * Итого
        * Задачи

8 *** ООП в функциональном стиле
    1 ** Введение
    2 ** Внутренний и внешний интерфейс
        * Пример из жизни
        * Внутренний и внешний интерфейс
        * Шаг 1: публичное и приватное свойство
        * Шаг 2: публичный и приватный метод
        * Шаг 3: константа
        * Шаг 4: доступ к обьекту из внутреннего метода
        * Итого
        * Задачи
    3 ** Геттеры и сеттеры
        * Геттеры и сеттеры для воды
        * Единый геттер-сеттер
        * Итого
        * Задачи
    4 ** Функциональное наследование
        * Зачем наследование
        * Наследование от Machine
        * Защищенные свойства
        * Перенос свойств в защищенные
        * Переопределение методов
        * Итого
        * Задачи

9 *** ООП в прототипном стиле
    1 ** Прототип обьекта
        * Прототип proto
        * Метод hasOwnProperty
        * Object.create(null)
        * Методы для работы с proto
        * Итого
        * Задачи
    2 ** Свойство F.prototype и создание обьектов через new
        * Свойство F.prototype
        * Свойство constructor
        * Эмуляция Object.create для IE8-
        * Итого
        * Задачи
    3 ** Встроенные "классы" в JavaScript
        * Откуда методы у {}?
        * Object.prototype
        * Встоенные "классы" в JavaScript
        * Примитивы
        * Изменение втроенных прототипов
        * Итого
        * Задачи
    4 ** Свои классы на прототипах
        * Обычный конструктор
        * Класс через прототип
        * Сравнение
        * Задачи
    5 ** Наследование классов в JavaScript
        * Наследование Array от Object
        * Наследование в наших классах
        * Полный код наследования
        * Вызов конструктора родителя
        * Переопределение методов
        * Итого
        * Задачи
    6 ** Проверка класса: "instanceof"
        * Алгоритм работы instanceof
        * Итого
        * Задачи
    7 ** Свои ошибки, наследование от Error
        * Свой обьект ошибки
        * instanceof + try...catch = ♡
        * Дальнейшее наследование
        * Итого
        * Задачи
    8 ** Примеси
        * Пример примеси
        * Примесь для событий
        * Итого

10 *** Современные возможности ES-2015
    1 ** ES-2015 сейчас
        * Конкретный движок JS
        * Babel.JS
    2 ** Переменные: let и const
        * let
        * const
        * Итого
    3 ** Деструктуризация
        * Массив
        * Деструктуризация обьекта
        * Вложенные деструктуризации
        * Итого
    4 ** Функции
        * Параметры по умолчанию
        * Оператор spread вместо arguments
        * Деструктуризация в параметрах
        * Имя "name"
        * Функции в блоке
        * Функции через =>
        * Функции-стрелки не имеют своего arguments
        * Итого
    5 ** Строки
        * Строки-шаблоны
        * Функции шаблонизации
        * Улучшеная поддержка юникода
        * Полезные методы
        * Итого
    6 ** Обьекты и прототипы
        * Короткое свойство
        * Вычисляемое свойство
        * Геттер-сеттер для прототипа
        * Object.assign
        * Object.is(value1, value2)
        * Методы обьекта
        * super
        * Итого
    7 ** Классы
        * Class
        * Class Expression
        * Геттеры, сеттеры и вычисляемые свойства
        * Статические свойства
        * Наследование
        * Итого